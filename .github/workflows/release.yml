on:
  push:
    branches:
      - main

name: Create Release

permissions:
  contents: write
  pull-requests: read
  id-token: write  # Required for PyPI trusted publishing

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Extract version from pyproject.toml
        id: version
        run: |
          # Extract version from pyproject.toml
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT
          echo "raw_version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Extracted version: v${VERSION}"
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            Release ${{ steps.version.outputs.raw_version }} from commit ${{ github.sha }}
            
            **Version:** ${{ steps.version.outputs.raw_version }} (from pyproject.toml)
            **Commit Message:** ${{ github.event.head_commit.message }}
            **Author:** ${{ github.event.head_commit.author.name }}
            **Timestamp:** ${{ github.event.head_commit.timestamp }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install 3.12
      
      - name: Build package
        run: |
          uv build
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          print-hash: true